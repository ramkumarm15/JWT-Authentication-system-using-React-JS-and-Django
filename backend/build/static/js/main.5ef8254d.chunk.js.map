{"version":3,"sources":["store/actions/types.js","axiosInstance.js","store/actions/auth.js","components/Navbar/Navbar.js","utils/Routes.js","hocs/Layout.js","pages/Activation/Activation.js","pages/Homepage/Homepage.js","pages/Loginpage/Loginpage.js","pages/Resetpassword/Resetpassword.js","pages/Resetpasswordconfrim/ResetPasswordConfrim.js","pages/Signup/Signup.js","App.js","store/reducers/auth.js","store/reducers/index.js","store/store.js","index.js"],"names":["LOGIN_SUCCESS","LOGIN_FAILED","LOAD_USER_SUCCESS","LOAD_USER_FAILED","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAILED","LOGOUT","API","axios","create","baseURL","process","loadUser","dispatch","a","localStorage","getItem","get","headers","Authorization","Accept","result","type","payload","data","Header","connect","state","isAuthenticated","auth","logout","useState","Navbar","bg","expand","Container","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","className","onClick","console","log","Routes","path","Layout","checkAuthentication","config","body","JSON","stringify","token","post","code","children","useEffect","transition","Slide","Activation","Homepage","Row","Col","xl","Login","login","email","password","statusCode","status","statusText","res","response","formData","setformData","handleChange","e","target","name","value","handleSubmit","preventDefault","toast","success","hideProgressBar","autoClose","message","detail","error","lg","Card","Body","Form","onSubmit","Group","Label","htmlFor","Control","placeholder","onChange","required","minLength","Button","variant","Resetpassword","ResetPasswordConfrim","Signup","App","LayoutRoute","Component","component","rest","render","props","exact","initialState","access","refresh","user","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducers","composeWithDevTools","applyMiddleware","Root","document","getElementById","AppSource","ReactDOM"],"mappings":"2PAAaA,EAAgB,gBAChBC,EAAe,eACfC,EAAoB,oBACpBC,EAAmB,mBACnBC,EAAwB,wBACxBC,EAAuB,uBACvBC,EAAS,S,QCJTC,E,OAAMC,EAAMC,OAAO,CAC9BC,QAASC,0BC4FEC,EAAW,yDAAM,WAAOC,GAAP,eAAAC,EAAA,0DACxBC,aAAaC,QAAQ,UADG,0CAGHT,EAAIU,IAAI,kBAAmB,CAC9CC,QAAS,CACP,eAAgB,mBAChBC,cAAc,OAAD,OAASJ,aAAaC,QAAQ,WAC3CI,OAAQ,sBAPY,OAGlBC,EAHkB,OAWxBR,EAAS,CACPS,KAAMpB,EACNqB,QAASF,EAAOG,OAbM,gDAgBxBX,EAAS,CACPS,KAAMnB,IAjBgB,gCAqB1BU,EAAS,CACPS,KAAMnB,IAtBkB,yDAAN,uD,OC3CXsB,EAASC,aAJE,SAACC,GAAD,MAAY,CAClCC,gBAAiBD,EAAME,KAAKD,mBAGiB,CAAEE,ODsE3B,kBAAM,SAACjB,GAC3BA,EAAS,CACPS,KAAMhB,OCxEYoB,EA3CG,SAAC,GAAiC,IAA/BI,EAA8B,EAA9BA,OAAQF,EAAsB,EAAtBA,gBAAsB,EACxBG,oBAAS,GADe,6BAQxD,OACE,mCACE,cAACC,EAAA,EAAD,CAAQC,GAAG,QAAQC,OAAO,KAA1B,SACE,eAACC,EAAA,EAAD,WACE,cAACH,EAAA,EAAOI,MAAR,CAAcC,GAAIC,IAAMC,GAAG,IAA3B,0BAGA,cAACP,EAAA,EAAOQ,OAAR,CAAeC,gBAAc,qBAC7B,cAACT,EAAA,EAAOU,SAAR,CAAiBC,GAAG,mBAApB,SACE,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACE,cAACD,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAG,IAAvB,kBAGA,cAACK,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAG,IAAvB,kBAGCX,EACC,cAACgB,EAAA,EAAIN,KAAL,CAAUQ,QAtBJ,WAClBhB,IACAiB,QAAQC,IAAI,WAoBA,oBAEA,cAACJ,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAG,SAAvB,kCCpCHU,EAEA,CAAEC,KAAM,KAFRD,EAGA,CAAEC,KAAM,UAHRD,EAIH,CAAEC,KAAM,WAJLD,EAKI,CAAEC,KAAM,mBALZD,EAMW,CAAEC,KAAM,uCANnBD,EAOC,CAAEC,KAAM,yB,QCiBTC,EAASzB,YAAQ,KAAM,CAAE0B,oBHZH,yDAAM,WAAOvC,GAAP,iBAAAC,EAAA,0DACnCC,aAAaC,QAAQ,UADc,wBAE/BqC,EAAS,CACbnC,QAAS,CACP,eAAgB,mBAChBE,OAAQ,qBAINkC,EAAOC,KAAKC,UAAU,CAAEC,MAAO1C,aAAaC,QAAQ,YATrB,kBAYdT,EAAImD,KAAK,oBAAqBJ,EAAMD,GAZtB,UAcV,oBAdU,OAcxB7B,KAAKmC,KAdmB,wBAejC9C,EAAS,CACPS,KAAMlB,IAhByB,mBAkB1B,GAlB0B,eAoBjCS,EAAS,CACPS,KAAMjB,IArByB,mBAuB1B,GAvB0B,iEA0BnCQ,EAAS,CACPS,KAAMjB,IA3B2B,mBA6B5B,GA7B4B,uCAgCrCQ,EAAS,CACPS,KAAMjB,IAjC6B,mBAmC9B,GAnC8B,0DAAN,uDGYwBO,YAArCc,EAfJ,SAAC,GAAiD,IAA/C0B,EAA8C,EAA9CA,oBAAqBxC,EAAyB,EAAzBA,SAAUgD,EAAe,EAAfA,SAMlD,OALAC,qBAAU,WACRT,IACAxC,MACC,IAGD,qCACE,cAACa,EAAD,IACA,cAAC,IAAD,CAAgBqC,WAAYC,MAC3BH,QCjBMI,EAAa,WACtB,OACI,8C,gBCyCKC,EAAWvC,aAHA,SAACC,GAAD,MAAY,CAClCC,gBAAiBD,EAAME,KAAKD,mBAENF,EAtCJ,SAAC,GAAyB,IAAvBE,EAAsB,EAAtBA,gBAErB,OACE,mCACGA,EACC,cAACO,EAAA,EAAD,UACE,cAAC+B,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,SACE,sBAAKvB,UAAU,oBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,4DACA,mBAAGA,UAAU,aAAb,6IAMF,oBAAIA,UAAU,SACd,cAAC,IAAD,CAAMA,UAAU,yBAAyBN,GAAG,SAA5C,mBAGA,cAAC,IAAD,CAAMM,UAAU,4BAA4BN,GAAG,UAA/C,8BAQR,cAAC,IAAD,CAAUA,GAAG,gB,gCC4FR8B,EAAQ3C,aALG,SAACC,GAAD,MAAY,CAElCC,gBAAiBD,EAAME,KAAKD,mBAGgB,CAAE0C,MN7E3B,SAACC,EAAOC,GAAR,8CAAqB,WAAO3D,GAAP,+CAAAC,EAAA,6DAClCuC,EAAS,CACbnC,QAAS,CACP,eAAgB,qBAGdoC,EAAOC,KAAKC,UAAU,CAAEe,QAAOC,aANG,kBASjBjE,EAAImD,KAAK,oBAAqBJ,EAAMD,GATnB,UAShChC,EATgC,OAUhCoD,EAAapD,EAAOqD,OAC1B3B,QAAQC,IAAI3B,GAEO,MAAfoD,EAbkC,wBAc5BC,EAAuBrD,EAAvBqD,OAAQC,EAAetD,EAAfsD,WACVC,EAAM,CAAEF,SAAQC,cACtB9D,EAAS,CACPS,KAAMtB,EACNuB,QAASF,EAAOG,OAGlBX,EAASD,KArB2B,kBAsB7BgE,GAtB6B,iBAwBCvD,EAAOwD,SAApCH,EAxB4B,EAwB5BA,OAAQC,EAxBoB,EAwBpBA,WAAYnD,EAxBQ,EAwBRA,KACtBoD,EAAM,CAAEF,SAAQC,aAAYnD,QAElCX,EAAS,CACPS,KAAMrB,IA5B4B,kBA8B7B2E,GA9B6B,mEAkCD,KAAIC,SAAjCH,EAlC8B,EAkC9BA,OAAQC,EAlCsB,EAkCtBA,WAAYnD,EAlCU,EAkCVA,KAEtBoD,EAAM,CAAEF,SAAQC,aAAYnD,QAClCX,EAAS,CACPS,KAAMrB,IAtC8B,kBAwC/B2E,GAxC+B,0DAArB,wDM6EAlD,EApHJ,SAAC,GAAgC,IAA9B4C,EAA6B,EAA7BA,MAAO1C,EAAsB,EAAtBA,gBAAsB,EACfG,mBAAS,CACvCwC,MAAO,GACPC,SAAU,KAHmC,mBACxCM,EADwC,KAC9BC,EAD8B,KAMvCR,EAAoBO,EAApBP,MAAOC,EAAaM,EAAbN,SAETQ,EAAe,SAACC,GAAD,OACnBF,EAAY,2BAAKD,GAAN,kBAAiBG,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAEjDC,EAAY,uCAAG,WAAOJ,GAAP,iBAAAnE,EAAA,6DACnBmE,EAAEK,iBADiB,SAIDhB,EAAMC,EAAOC,GAJZ,OAMA,OAFbxB,EAJa,QAMX0B,QAAgB,gBAItBa,IAAMC,QAJgB,gBAIC,CACrBC,iBAAiB,EACjBC,UAAW,QAIPC,EAFD,UAEc3C,EAAI0B,OAFlB,YAE4B1B,EAAI2B,WAFhC,aAE+C3B,EAAIxB,KAAKoE,QAE7DL,IAAMM,MAAMF,EAAS,CACnBF,iBAAiB,EACjBC,UAAW,OApBI,2CAAH,sDA4BlB,OAAI9D,EACK,cAAC,IAAD,CAAUW,GAAG,MAIpB,mCACE,qBAAKM,UAAU,4CAAf,SACE,cAACV,EAAA,EAAD,UACE,cAAC+B,EAAA,EAAD,CAAKrB,UAAU,yBAAf,SACE,cAACsB,EAAA,EAAD,CAAK2B,GAAI,EAAT,SACE,cAACC,EAAA,EAAD,UACE,eAACA,EAAA,EAAKC,KAAN,CAAWnD,UAAU,MAArB,UACE,sBAAKA,UAAU,0BAAf,UACE,oBAAIA,UAAU,iBAAd,mBACA,mBAAGA,UAAU,kBAAb,6DAIF,eAACoD,EAAA,EAAD,CAAMC,SAAU,SAACjB,GAAD,OAAOI,EAAaJ,IAApC,UACE,eAACgB,EAAA,EAAKE,MAAN,CAAYtD,UAAU,OAAtB,UACE,cAACoD,EAAA,EAAKG,MAAN,CAAYC,QAAQ,SAApB,2BACA,cAACJ,EAAA,EAAKK,QAAN,CACEhF,KAAK,QACL6D,KAAK,QACLxC,GAAG,QACH4D,YAAY,gBACZnB,MAAOb,GAAS,GAChBiC,SAAU,SAACvB,GAAD,OAAOD,EAAaC,IAC9BwB,UAAQ,OAGZ,eAACR,EAAA,EAAKE,MAAN,CAAYtD,UAAU,OAAtB,UACE,cAAC,IAAD,CACEN,GAAG,kBACHM,UAAU,wBAFZ,SAIE,4DAEF,cAACoD,EAAA,EAAKG,MAAN,CAAYC,QAAQ,YAApB,sBACA,cAACJ,EAAA,EAAKK,QAAN,CACEhF,KAAK,WACL6D,KAAK,WACLxC,GAAG,WACH4D,YAAY,iBACZnB,MAAOZ,GAAY,GACnBgC,SAAU,SAACvB,GAAD,OAAOD,EAAaC,IAC9ByB,UAAU,IACVD,UAAQ,OAGZ,cAACR,EAAA,EAAKE,MAAN,CAAYtD,UAAU,wBAAtB,SACE,cAAC8D,EAAA,EAAD,CAAQrF,KAAK,SAASsF,QAAQ,UAAUxB,MAAM,QAA9C,wBAKJ,qBAAKvC,UAAU,mBAAf,SACE,oBAAGA,UAAU,aAAb,4BACkB,IAChB,cAAC,IAAD,CAAMN,GAAG,UAAT,sDC5GTsE,EAAgB,WACzB,OACI,iDCFKC,EAAuB,WAChC,OACI,wDCFKC,EAAS,WAClB,OACI,0CCiBKC,EAAM,WACjB,IAAMC,EAAc,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BACzD,OACE,cAAC,IAAD,2BACMA,GADN,IAEEC,OAAQ,SAACC,GAAD,OACN,cAACnE,EAAD,UACE,cAAC+D,EAAD,eAAeI,WAOzB,OACE,mCACE,eAAC,IAAD,WAEE,cAACL,EAAD,CAAaE,UAAWlD,EAAUf,KAAMD,EAAiBC,KAAMqE,OAAK,IACpE,cAACN,EAAD,CAAaE,UAAW9C,EAAOnB,KAAMD,EAAiBC,KAAMqE,OAAK,IACjE,cAACN,EAAD,CAAaE,UAAWJ,EAAQ7D,KAAMD,EAAcC,KAAMqE,OAAK,IAC/D,cAACN,EAAD,CACEE,UAAWnD,EACXd,KAAMD,EAAkBC,KACxBqE,OAAK,IAEP,cAACN,EAAD,CACEE,UAAWN,EACX3D,KAAMD,EAAqBC,KAC3BqE,OAAK,IAEP,cAACN,EAAD,CACEE,UAAWL,EACX5D,KAAMD,EAA4BC,KAClCqE,OAAK,U,wBC7CTC,GAAe,CACnBC,OAAQ1G,aAAaC,QAAQ,UAC7B0G,QAAS3G,aAAaC,QAAQ,WAC9BY,gBAAiB,KACjB+F,KAAM,MCXOC,6BAAgB,CAC7B/F,KDakB,WAAmC,IAAlCF,EAAiC,uDAAzB6F,GAAcK,EAAW,uCAC5CvG,EAAkBuG,EAAlBvG,KAAMC,EAAYsG,EAAZtG,QACd,OAAQD,GACN,KAAKtB,EAEH,OADAe,aAAa+G,QAAQ,SAAUvG,EAAQkG,QAChC,2BACF9F,GADL,IAEEC,iBAAiB,EACjB6F,OAAQlG,EAAQkG,OAChBC,QAASnG,EAAQmG,UAErB,KAAKxH,EACH,OAAO,2BACFyB,GADL,IAEEgG,KAAMpG,IAGV,KAAKnB,EACH,OAAO,2BACFuB,GADL,IAEEC,iBAAiB,IAErB,KAAKvB,EACH,OAAO,2BACFsB,GADL,IAEEC,iBAAiB,IAGrB,KAAK3B,EACL,KAAKK,EAGH,OAFAS,aAAagH,WAAW,UACxBhH,aAAagH,WAAW,WACjB,2BACFpG,GADL,IAEE8F,OAAQ,KACRC,QAAS,KACT9F,iBAAiB,EACjB+F,KAAM,OAEV,KAAKxH,EACH,OAAO,2BACFwB,GADL,IAEEgG,KAAM,OAEV,QACE,OAAOhG,MEvDPqG,GAAa,CAACC,KAEPC,GAAQC,sBACnBC,GALmB,GAOnBC,8BAAoBC,kBAAe,WAAf,EAAmBN,MCInCO,I,MAAOC,SAASC,eAAe,SAE/BC,GACJ,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,IAAD,UACE,cAAC,EAAD,QAKNS,IAAStB,OAAOqB,GAAWH,M","file":"static/js/main.5ef8254d.chunk.js","sourcesContent":["export const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED'\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\r\nexport const LOAD_USER_FAILED = 'LOAD_USER_FAILED'\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS'\r\nexport const AUTHENTICATED_FAILED = 'AUTHENTICATED_FAILED'\r\nexport const LOGOUT = 'LOGOUT'","import axios from \"axios\";\r\n\r\nexport const API = axios.create({\r\n  baseURL: process.env.REACT_APP_API_ENDPOINT_URL,\r\n});\r\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAILED,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAILED,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nimport { API } from \"../../axiosInstance\";\r\n\r\nexport const checkAuthentication = () => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ token: localStorage.getItem(\"access\") });\r\n\r\n    try {\r\n      const result = await API.post(\"/auth/jwt/verify/\", body, config);\r\n\r\n      if (result.data.code !== \"token_not_valid\") {\r\n        dispatch({\r\n          type: AUTHENTICATED_SUCCESS,\r\n        });\r\n        return true;\r\n      } else {\r\n        dispatch({\r\n          type: AUTHENTICATED_FAILED,\r\n        });\r\n        return false;\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: AUTHENTICATED_FAILED,\r\n      });\r\n      return false;\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: AUTHENTICATED_FAILED,\r\n    });\r\n    return false;\r\n  }\r\n};\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const result = await API.post(\"/auth/jwt/create/\", body, config);\r\n    const statusCode = result.status;\r\n    console.log(result);\r\n\r\n    if (statusCode === 200) {\r\n      const { status, statusText } = result;\r\n      const res = { status, statusText };\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: result.data,\r\n      });\r\n\r\n      dispatch(loadUser());\r\n      return res;\r\n    } else {\r\n      const { status, statusText, data } = result.response;\r\n      const res = { status, statusText, data };\r\n\r\n      dispatch({\r\n        type: LOGIN_FAILED,\r\n      });\r\n      return res;\r\n    }\r\n  } catch (err) {\r\n\r\n    const { status, statusText, data } = err.response;\r\n\r\n    const res = { status, statusText, data };\r\n    dispatch({\r\n      type: LOGIN_FAILED,\r\n    });\r\n    return res;\r\n  }\r\n};\r\n\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    try {\r\n      const result = await API.get(\"/auth/users/me/\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n\r\n      dispatch({\r\n        type: LOAD_USER_SUCCESS,\r\n        payload: result.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOAD_USER_FAILED,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: LOAD_USER_FAILED,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Nav, Navbar, Container } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { logout } from \"../../store/actions/auth\";\r\n\r\nexport const HeaderApp = ({ logout, isAuthenticated }) => {\r\n  const [redirect, setRedirect] = useState(false);\r\n\r\n  const logout_user = () => {\r\n    logout();\r\n    console.log('logout')\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand as={Link} to=\"/\">\r\n            Login System\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"me-auto\">\r\n              <Nav.Link as={Link} to=\"/\">\r\n                Home\r\n              </Nav.Link>\r\n              <Nav.Link as={Link} to=\"/\">\r\n                Link\r\n              </Nav.Link>\r\n              {isAuthenticated ? (\r\n                <Nav.Link onClick={logout_user}>Logout</Nav.Link>\r\n              ) : (\r\n                <Nav.Link as={Link} to=\"/login\">\r\n                  Login\r\n                </Nav.Link>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport const Header = connect(mapStateToProps, { logout })(HeaderApp);\r\n","export const Routes = {\r\n  // Home: { path: \"/\" },\r\n  Dashboard: { path: \"/\" },\r\n  Loginpage: { path: \"/login\" },\r\n  signup: { path: \"/signup\" },\r\n  resetpassword: { path: \"/reset-password\" },\r\n  resetpasswordconfrim: { path: \"/password/reset/confrim/:uid/:token\" },\r\n  activation: { path: \"/activate/:uid/:token\" },\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { Header } from \"../components/Navbar/Navbar\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { checkAuthentication, loadUser } from \"../store/actions/auth\";\r\n\r\nimport { ToastContainer, Slide } from \"react-toastify\";\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst LayoutApp = ({ checkAuthentication, loadUser, children }) => {\r\n  useEffect(() => {\r\n    checkAuthentication();\r\n    loadUser();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <ToastContainer transition={Slide} />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\nexport const Layout = connect(null, { checkAuthentication, loadUser })(\r\n  LayoutApp\r\n);\r\n","import React from 'react'\r\n\r\nexport const Activation = () => {\r\n    return (\r\n        <div>\r\n            Activation\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\n\r\nconst HomepageApp = ({ isAuthenticated }) => {\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated ? (\r\n        <Container>\r\n          <Row>\r\n            <Col xl={12}>\r\n              <div className=\"mt-5 p-5 bg-light\">\r\n                <div className=\"text-center\">\r\n                  <h1>Session Authentication App</h1>\r\n                  <p className=\"text-muted\">\r\n                    The Application uses a Django rest framework session\r\n                    authentication to login and logout users. Here I use React\r\n                    as Frontend.\r\n                  </p>\r\n                </div>\r\n                <hr className=\"my-4\" />\r\n                <Link className=\"btn btn-secondary me-3\" to=\"/login\">\r\n                  Login\r\n                </Link>\r\n                <Link className=\"btn btn-outline-secondary\" to=\"/signup\">\r\n                  Sign up\r\n                </Link>\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapToStateProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\nexport const Homepage = connect(mapToStateProps)(HomepageApp);\r\n","import React, { useState } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\n// Bootstrap\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Redux action\r\nimport { login } from \"../../store/actions/auth\";\r\n\r\nconst LoginApp = ({ login, isAuthenticated }) => {\r\n  const [formData, setformData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const handleChange = (e) =>\r\n    setformData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // send state to redux\r\n    const log = await login(email, password);\r\n\r\n    if (log.status === 200) {\r\n\r\n      const message = `Login Success`;\r\n\r\n      toast.success(message, {\r\n        hideProgressBar: true,\r\n        autoClose: 4000,\r\n      });\r\n    } else {\r\n\r\n      const message = `${log.status} ${log.statusText}, ${log.data.detail}`;\r\n\r\n      toast.error(message, {\r\n        hideProgressBar: true,\r\n        autoClose: 4000,\r\n      });\r\n    }\r\n  };\r\n\r\n  // user IsAuthenticated\r\n  // Redirect to homepage\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center min-vh-100 py-3\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg={5}>\r\n              <Card>\r\n                <Card.Body className=\"p-4\">\r\n                  <div className=\"text-center w-75 m-auto\">\r\n                    <h3 className=\"text-dark mb-3\">Login</h3>\r\n                    <p className=\"text-muted mb-4\">\r\n                      Enter your credentials to access admin panel\r\n                    </p>\r\n                  </div>\r\n                  <Form onSubmit={(e) => handleSubmit(e)}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label htmlFor=\"#email\">Email Address</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        value={email || \"\"}\r\n                        onChange={(e) => handleChange(e)}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Link\r\n                        to=\"/reset-password\"\r\n                        className=\"text-muted float-end \"\r\n                      >\r\n                        <small>Forgot your password?</small>\r\n                      </Link>\r\n                      <Form.Label htmlFor=\"#password\">Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        value={password || \"\"}\r\n                        onChange={(e) => handleChange(e)}\r\n                        minLength=\"8\"\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mt-3 mb-3 text-center\">\r\n                      <Button type=\"submit\" variant=\"primary\" value=\"Login\">\r\n                        Login\r\n                      </Button>\r\n                    </Form.Group>\r\n                  </Form>\r\n                  <div className=\"text-center mt-5\">\r\n                    <p className=\"text-muted\">\r\n                      Not registered?{\" \"}\r\n                      <Link to=\"/signup\">Create an account</Link>\r\n                    </p>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  // Check Authentictaion\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\nexport const Login = connect(mapStateToProps, { login })(LoginApp);\r\n","import React from 'react'\r\n\r\nexport const Resetpassword = () => {\r\n    return (\r\n        <div>\r\n            Resetpassword\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const ResetPasswordConfrim = () => {\r\n    return (\r\n        <div>\r\n            ResetPasswordConfrim\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Signup = () => {\r\n    return (\r\n        <div>\r\n            Signup\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\n// Components\nimport { Navbar } from \"./components/Navbar/Navbar\";\n\n// URL Routes for pages\nimport { Routes } from \"./utils/Routes\";\n\n// layout\nimport { Layout } from \"./hocs/Layout\";\n\n// Pages\nimport { Activation } from \"./pages/Activation/Activation\";\nimport { Homepage } from \"./pages/Homepage/Homepage\";\nimport { Login } from \"./pages/Loginpage/Loginpage\";\nimport { Resetpassword } from \"./pages/Resetpassword/Resetpassword\";\nimport { ResetPasswordConfrim } from \"./pages/Resetpasswordconfrim/ResetPasswordConfrim\";\nimport { Signup } from \"./pages/Signup/Signup\";\n\nexport const App = () => {\n  const LayoutRoute = ({ component: Component, ...rest }) => {\n    return (\n      <Route\n        {...rest}\n        render={(props) => (\n          <Layout>\n            <Component {...props} />\n          </Layout>\n        )}\n      />\n    );\n  };\n\n  return (\n    <>\n      <Switch>\n        {/* <LayoutRoute component={Navbar} path={Routes.Home.path} exact /> */}\n        <LayoutRoute component={Homepage} path={Routes.Dashboard.path} exact />\n        <LayoutRoute component={Login} path={Routes.Loginpage.path} exact />\n        <LayoutRoute component={Signup} path={Routes.signup.path} exact />\n        <LayoutRoute\n          component={Activation}\n          path={Routes.activation.path}\n          exact\n        />\n        <LayoutRoute\n          component={Resetpassword}\n          path={Routes.resetpassword.path}\n          exact\n        />\n        <LayoutRoute\n          component={ResetPasswordConfrim}\n          path={Routes.resetpasswordconfrim.path}\n          exact\n        />\n      </Switch>\n    </>\n  );\n};\n","import {\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAILED,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAILED,\r\n  LOGOUT,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  access: localStorage.getItem(\"access\"),\r\n  refresh: localStorage.getItem(\"refresh\"),\r\n  isAuthenticated: null,\r\n  user: null,\r\n};\r\n\r\nexport const auth = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"access\", payload.access);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        access: payload.access,\r\n        refresh: payload.refresh,\r\n      };\r\n    case LOAD_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n      };\r\n\r\n    case AUTHENTICATED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n      };\r\n    case AUTHENTICATED_FAILED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n      };\r\n\r\n    case LOGIN_FAILED:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"access\");\r\n      localStorage.removeItem(\"refresh\");\r\n      return {\r\n        ...state,\r\n        access: null,\r\n        refresh: null,\r\n        isAuthenticated: false,\r\n        user: null,\r\n      };\r\n    case LOAD_USER_FAILED:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { auth } from \"./auth\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducers from \"./reducers/\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n  rootReducers,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// App\nimport { App } from \"./App\";\n\n// React Router\nimport { HashRouter } from \"react-router-dom\";\n\n// Redux Store\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/store\";\n\n// Main CSS\nimport \"./styles/app.css\";\n\nconst Root = document.getElementById(\"root\");\n\nconst AppSource = (\n  <Provider store={store}>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </Provider>\n);\n\nReactDOM.render(AppSource, Root);\n"],"sourceRoot":""}