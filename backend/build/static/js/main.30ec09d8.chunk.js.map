{"version":3,"sources":["utils/Routes.js","store/actions/types.js","axiosInstance.js","store/actions/auth.js","hocs/Layout.js","components/Navbar/Navbar.js","components/Loader/Loader.js","pages/Activation/Activation.js","pages/Dashboard/Dashboard.js","pages/Homepage/Homepage.js","pages/Loginpage/Loginpage.js","pages/Resetpassword/Resetpassword.js","pages/Resetpasswordconfrim/ResetPasswordConfrim.js","pages/Signup/Signup.js","App.js","store/reducers/auth.js","store/reducers/index.js","store/store.js","index.js"],"names":["Routes","path","SIGNUP_SUCCESS","SIGNUP_FAILED","ACTIVATION_SUCCESS","ACTIVATION_FAILED","LOGIN_SUCCESS","LOGIN_FAILED","LOAD_USER_SUCCESS","LOAD_USER_FAILED","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAILED","LOGOUT","PASSWORD_RESET_SUCCESS","PASSWORD_RESET_FAILED","PASSWORD_RESET_CONFIRM_SUCCESS","PASSWORD_RESET_CONFIRM_FAILED","API","axios","create","baseURL","process","loadUser","dispatch","a","localStorage","getItem","get","headers","Authorization","Accept","result","type","payload","data","Layout","connect","checkAuthentication","config","body","JSON","stringify","token","post","code","children","useEffect","transition","Slide","Header","state","isAuthenticated","auth","user","logout","admin","is_superuser","logout_user","AuthLinks","Nav","Link","as","to","onClick","className","text","name","charAt","toUpperCase","slice","GuestLinks","Navbar","bg","expand","Container","Brand","Toggle","aria-controls","Collapse","id","Loader","show","useState","done","setDone","React","timeout","setTimeout","clearTimeout","defaultOptions","loop","autoplay","animationData","loading","rendererSettings","preserveAspectRatio","defaultOptions2","tick","options","height","width","Activation","activate","uid","response","status","match","requestSent","setRequestSent","spinner","setSpinner","handleSubmit","e","preventDefault","params","Row","Col","lg","Card","Body","Form","onSubmit","Group","Button","variant","disabled","Spinner","animation","size","role","aria-hidden","value","Dashboard","isAdmin","setIsAdmin","Homepage","xl","LoginPage","login","email","password","statusText","res","formData","setformData","handleChange","target","log","toast","success","hideProgressBar","autoClose","message","detail","error","Label","htmlFor","Control","placeholder","onChange","required","minLength","Resetpassword","reset_password","dark","ResetPasswordConfrim","reset_password_confirm","new_password","re_new_password","console","Signup","signup","re_password","emailError","setEmailError","passwordError","setPasswordError","response_data","isInvalid","Feedback","App","RouteWithSidebar","Component","component","rest","loaded","setLoaded","timer","render","props","RouteFullPage","exact","initialState","access","refresh","combineReducers","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducers","composeWithDevTools","applyMiddleware","Root","document","getElementById","AppSource","ReactDOM"],"mappings":"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","file":"static/js/main.30ec09d8.chunk.js","sourcesContent":["export const Routes = {\r\n  Home: { path: \"/dashboard\" },\r\n  Dashboard: { path: \"/\" },\r\n  Loginpage: { path: \"/login\" },\r\n  signup: { path: \"/signup\" },\r\n  resetpassword: { path: \"/reset-password\" },\r\n  resetpasswordconfrim: { path: \"/password/reset/:uid/:token\" },\r\n  activation: { path: \"/activate/:uid/:token\" },\r\n};\r\n","export const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS'\r\nexport const SIGNUP_FAILED = 'SIGNUP_FAILED'\r\n\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS'\r\nexport const ACTIVATION_FAILED = 'ACTIVATION_FAILED'\r\n\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\r\nexport const LOGIN_FAILED = 'LOGIN_FAILED'\r\n\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS'\r\nexport const LOAD_USER_FAILED = 'LOAD_USER_FAILED'\r\n\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS'\r\nexport const AUTHENTICATED_FAILED = 'AUTHENTICATED_FAILED'\r\n\r\nexport const LOGOUT = 'LOGOUT'\r\n\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS'\r\nexport const PASSWORD_RESET_FAILED = 'PASSWORD_RESET_FAILED'\r\n\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS'\r\nexport const PASSWORD_RESET_CONFIRM_FAILED = 'PASSWORD_RESET_CONFIRM_FAILED'","import axios from \"axios\";\r\n\r\n// Axios API instance for all request\r\nexport const API = axios.create({\r\n  baseURL: process.env.REACT_APP_API_ENDPOINT_URL,\r\n});\r\n","import {\r\n  ACTIVATION_SUCCESS,\r\n  ACTIVATION_FAILED,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAILED,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAILED,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  LOGOUT,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_FAILED,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_FAILED,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAILED,\r\n} from \"../actions/types\";\r\n\r\nimport { API } from \"../../axiosInstance\";\r\n\r\n// Check Authentictaion of Users, When user again loggedIn after some times.\r\nexport const checkAuthentication = () => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    };\r\n\r\n    const body = JSON.stringify({ token: localStorage.getItem(\"access\") });\r\n\r\n    try {\r\n      const result = await API.post(\"/auth/jwt/verify/\", body, config);\r\n\r\n      if (result.data.code !== \"token_not_valid\") {\r\n        dispatch({\r\n          type: AUTHENTICATED_SUCCESS,\r\n        });\r\n        return true;\r\n      } else {\r\n        dispatch({\r\n          type: AUTHENTICATED_FAILED,\r\n        });\r\n        return false;\r\n      }\r\n    } catch (err) {\r\n      dispatch({\r\n        type: AUTHENTICATED_FAILED,\r\n      });\r\n      return false;\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: AUTHENTICATED_FAILED,\r\n    });\r\n    return false;\r\n  }\r\n};\r\n\r\n// Register a New Account for user\r\nexport const signup =\r\n  (email, name, password, re_password) => async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const body = JSON.stringify({ email, name, password, re_password });\r\n\r\n    try {\r\n      const result = await API.post(\"/auth/users/\", body, config);\r\n\r\n      const statusCode = result.status;\r\n\r\n      if (statusCode === 201) {\r\n        const { status, statusText } = result;\r\n        const res = { status, statusText };\r\n        dispatch({\r\n          type: SIGNUP_SUCCESS,\r\n        });\r\n        return res;\r\n      } else {\r\n        const { status, statusText, data } = result.response;\r\n        const res = { status, statusText, data };\r\n\r\n        dispatch({\r\n          type: SIGNUP_FAILED,\r\n        });\r\n        return res;\r\n      }\r\n    } catch (err) {\r\n      const { status, statusText, data } = err.response;\r\n\r\n      const res = { status, statusText, data };\r\n      dispatch({\r\n        type: SIGNUP_FAILED,\r\n      });\r\n      return res;\r\n    }\r\n  };\r\n\r\n// Activate a user account\r\nexport const activate = (uid, token) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ uid, token });\r\n\r\n  try {\r\n    const response = await API.post(\"/auth/users/activation/\", body, config);\r\n\r\n    if (response.status === 204) {\r\n      dispatch({\r\n        type: ACTIVATION_SUCCESS,\r\n      });\r\n      return response.status;\r\n    } else {\r\n      dispatch({\r\n        type: ACTIVATION_FAILED,\r\n      });\r\n      return false;\r\n    }\r\n  } catch (err) {\r\n    dispatch({\r\n      type: ACTIVATION_FAILED,\r\n    });\r\n    return false;\r\n  }\r\n};\r\n\r\n// Login the existing user account\r\nexport const login = (email, password) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  try {\r\n    const result = await API.post(\"/auth/jwt/create/\", body, config);\r\n    const statusCode = result.status;\r\n\r\n    if (statusCode === 200) {\r\n      const { status, statusText } = result;\r\n      const res = { status, statusText };\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: result.data,\r\n      });\r\n\r\n      dispatch(loadUser());\r\n      return res;\r\n    } else {\r\n      const { status, statusText, data } = result.response;\r\n      const res = { status, statusText, data };\r\n\r\n      dispatch({\r\n        type: LOGIN_FAILED,\r\n      });\r\n      return res;\r\n    }\r\n  } catch (err) {\r\n    const { status, statusText, data } = err.response;\r\n\r\n    const res = { status, statusText, data };\r\n    dispatch({\r\n      type: LOGIN_FAILED,\r\n    });\r\n    return res;\r\n  }\r\n};\r\n\r\n// Get User data after loggedIn\r\nexport const loadUser = () => async (dispatch) => {\r\n  if (localStorage.getItem(\"access\")) {\r\n    try {\r\n      const result = await API.get(\"/auth/users/me/\", {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `JWT ${localStorage.getItem(\"access\")}`,\r\n          Accept: \"application/json\",\r\n        },\r\n      });\r\n\r\n      dispatch({\r\n        type: LOAD_USER_SUCCESS,\r\n        payload: result.data,\r\n      });\r\n    } catch (err) {\r\n      dispatch({\r\n        type: LOAD_USER_FAILED,\r\n      });\r\n    }\r\n  } else {\r\n    dispatch({\r\n      type: LOAD_USER_FAILED,\r\n    });\r\n  }\r\n};\r\n\r\n// Logout of user account\r\nexport const logout = () => (dispatch) => {\r\n  dispatch({\r\n    type: LOGOUT,\r\n  });\r\n};\r\n\r\n// Get reset password link of the user account\r\nexport const reset_password = (email) => async (dispatch) => {\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  const body = JSON.stringify({ email });\r\n\r\n  try {\r\n    await API.post(\"/auth/users/reset_password/\", body, config);\r\n\r\n    dispatch({\r\n      type: PASSWORD_RESET_SUCCESS,\r\n    });\r\n    return true;\r\n  } catch (err) {\r\n    dispatch({\r\n      type: PASSWORD_RESET_FAILED,\r\n    });\r\n    return false;\r\n  }\r\n};\r\n\r\n// Reset the new password of user account\r\nexport const reset_password_confirm =\r\n  (uid, token, new_password, re_new_password) => async (dispatch) => {\r\n    const config = {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n    try {\r\n      await API.post(\"/auth/users/reset_password_confirm/\", body, config);\r\n\r\n      dispatch({\r\n        type: PASSWORD_RESET_CONFIRM_SUCCESS,\r\n      });\r\n      return true;\r\n    } catch (err) {\r\n      dispatch({\r\n        type: PASSWORD_RESET_CONFIRM_FAILED,\r\n      });\r\n      console.log(err.response);\r\n      return false;\r\n    }\r\n  };\r\n","import React, { useEffect } from \"react\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { checkAuthentication, loadUser } from \"../store/actions/auth\";\r\n\r\nimport { ToastContainer, Slide } from \"react-toastify\";\r\n\r\n// higher order react component\r\nconst LayoutApp = ({ checkAuthentication, loadUser, children }) => {\r\n  useEffect(() => {\r\n    checkAuthentication();\r\n    loadUser();\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <ToastContainer transition={Slide} />\r\n      {children}\r\n    </>\r\n  );\r\n};\r\n\r\n// Connect react component with redux store\r\nexport const Layout = connect(null, { checkAuthentication, loadUser })(\r\n  LayoutApp\r\n);\r\n","import React from \"react\";\r\n\r\nimport { Nav, Navbar, Container } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { logout } from \"../../store/actions/auth\";\r\n\r\nexport const HeaderApp = ({ logout, isAuthenticated, user }) => {\r\n  const admin = user !== null ? user.is_superuser : false;\r\n\r\n  const logout_user = () => {\r\n    logout();\r\n  };\r\n\r\n  const firstLetterCaps = (text) => {\r\n    return text.charAt(0).toUpperCase() + text.slice(1);\r\n  };\r\n\r\n  const AuthLinks = () => {\r\n    return (\r\n      <>\r\n        {admin ? (\r\n          <Nav.Link as={Link} to=\"/dashboard\">\r\n            Dashboard\r\n          </Nav.Link>\r\n        ) : null}\r\n        <Nav.Link onClick={logout_user}>Logout</Nav.Link>\r\n        <Nav.Link as=\"p\" className=\"m-0\">\r\n          {firstLetterCaps(user.name)}\r\n        </Nav.Link>\r\n      </>\r\n    );\r\n  };\r\n  const GuestLinks = () => {\r\n    return (\r\n      <>\r\n        <Nav.Link as={Link} to=\"/login\">\r\n          Login\r\n        </Nav.Link>\r\n        <Nav.Link as={Link} to=\"/signup\">\r\n          Signup\r\n        </Nav.Link>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Navbar bg=\"light\" expand=\"lg\">\r\n        <Container>\r\n          <Navbar.Brand as={Link} to=\"/\">\r\n            Login System\r\n          </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"ms-auto\">\r\n              <Nav.Link as={Link} to=\"/\">\r\n                Home\r\n              </Nav.Link>\r\n              <Nav.Link as={Link} to=\"/\">\r\n                FAQ\r\n              </Nav.Link>\r\n              {isAuthenticated ? <AuthLinks /> : <GuestLinks />}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </>\r\n  );\r\n};\r\n\r\n// Get data from redux store\r\nconst mapStateToProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n  user: state.auth.user,\r\n});\r\n\r\n// Connect react component with redux store\r\nexport const Header = connect(mapStateToProps, { logout })(HeaderApp);\r\n","import React,{ useState } from \"react\";\r\n\r\n// Loading Screen utils\r\nimport Lottie from \"react-lottie\";\r\nimport FadeIn from \"react-fade-in\";\r\n\r\n// Lottie Images\r\nimport loading from \"../../styles/lottie/loading.json\";\r\nimport tick from \"../../styles/lottie/tick.json\";\r\n\r\n// Loading screen\r\nexport const Loader = ({ show }) => {\r\n  const [done, setDone] = useState(false);\r\n  \r\n  React.useEffect(() => {\r\n    let timeout = setTimeout(() => setDone(true), 2000);\r\n    return () => {\r\n      clearTimeout(timeout);\r\n    };\r\n  }, []);\r\n\r\n  const defaultOptions = {\r\n    loop: true,\r\n    autoplay: true,\r\n    animationData: loading,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n  const defaultOptions2 = {\r\n    loop: false,\r\n    autoplay: true,\r\n    animationData: tick,\r\n    rendererSettings: {\r\n      preserveAspectRatio: \"xMidYMid slice\",\r\n    },\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FadeIn>\r\n        <div className={`loader bg-light align-items-center`}>\r\n          {!done ? (\r\n            <>\r\n              <Lottie options={defaultOptions} height={120} width={120} />\r\n            </>\r\n          ) : (\r\n            <Lottie options={defaultOptions2} height={120} width={120} />\r\n          )}\r\n        </div>\r\n      </FadeIn>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\n// Router redirection\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// redux connect with react\r\nimport { connect } from \"react-redux\";\r\n\r\n// Bootstrap\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\n// Redux action\r\nimport { activate } from \"../../store/actions/auth\";\r\n\r\nconst ActivationApp = ({ match, activate }) => {\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const [spinner, setSpinner] = useState(false);\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setSpinner(true);\r\n    const uid = match.params.uid;\r\n    const token = match.params.token;\r\n\r\n    const res = await activate(uid, token);\r\n\r\n    if (res === 204) {\r\n      setRequestSent(true);\r\n    }\r\n  };\r\n\r\n  if (requestSent) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center vh-100 py-3\">\r\n        <Container className=\"h-100\">\r\n          <Row className=\"align-items-center justify-content-center h-100\">\r\n            <Col lg={5}>\r\n              <Card>\r\n                <Card.Body className=\"p-4\">\r\n                  <div className=\"text-center w-75 m-auto\">\r\n                    <h3 className=\"text-dark mb-3\">Activate your account</h3>\r\n                  </div>\r\n                  <Form onSubmit={(e) => handleSubmit(e)}>\r\n                    <Form.Group className=\"text-center\">\r\n                      {!spinner ? (\r\n                        <Button type=\"submit\" variant=\"primary\" value=\"Login\">\r\n                          Activate\r\n                        </Button>\r\n                      ) : (\r\n                        <Button variant=\"primary\" disabled>\r\n                          <Spinner\r\n                            as=\"span\"\r\n                            animation=\"border\"\r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                          />\r\n                          {\"  \"}\r\n                          Activating...\r\n                        </Button>\r\n                      )}\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// Connect react component with redux store\r\nexport const Activation = connect(null, { activate })(ActivationApp);\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\n// Router redirection\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// redux connect with react\r\nimport { connect } from \"react-redux\";\r\n\r\n\r\nconst DashboardApp = ({ user, isAuthenticated }) => {\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  useEffect(() => {\r\n    if (isAuthenticated) {\r\n      const { is_superuser } = user;\r\n      setIsAdmin(is_superuser);\r\n    }\r\n  }, [isAuthenticated, user]);\r\n  return (\r\n    <>\r\n      {isAuthenticated ? (\r\n        isAdmin ? (\r\n          <p>Dashobard</p>\r\n        ) : (\r\n          <p>No accesss</p>\r\n        )\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n// Get Data from redux store\r\nconst mapToStateProps = (state) => ({\r\n  user: state.auth.user,\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\n// Connect react component with redux store\r\nexport const Dashboard = connect(mapToStateProps)(DashboardApp);\r\n","import React from \"react\";\r\n\r\n// Router redirection\r\nimport { Link, Redirect } from \"react-router-dom\";\r\n\r\n// redux connect with react\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { Container, Row, Col } from \"react-bootstrap\";\r\n\r\nconst HomepageApp = ({ isAuthenticated }) => {\r\n\r\n  // const capFirstLetter = (text) =>{\r\n  //   return text.\r\n  // }\r\n\r\n  return (\r\n    <>\r\n      {isAuthenticated ? (\r\n        <Container>\r\n          <Row>\r\n            <Col xl={12}>\r\n              <div className=\"mt-5 p-5 bg-light\">\r\n                <div className=\"text-center\">\r\n                  <h1>JWT Authentication App</h1>\r\n                  <p className=\"text-muted\">\r\n                    The Application uses a Django rest framework JWT\r\n                    authentication to login and logout users. Here I use React\r\n                    as Frontend and djnago as Backend.\r\n                  </p>\r\n                </div>\r\n                <hr className=\"my-4 text-dark\" />\r\n              </div>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\n// Get Data from redux store\r\nconst mapToStateProps = (state) => ({\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\n// Connect react component with redux store\r\nexport const Homepage = connect(mapToStateProps)(HomepageApp);\r\n","import React, { useState } from \"react\";\r\n\r\n// Router\r\nimport { Redirect, Link } from \"react-router-dom\";\r\n\r\n// redux connect with react\r\nimport { connect } from \"react-redux\";\r\n\r\n// Bootstrap\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Redux action\r\nimport { login } from \"../../store/actions/auth\";\r\n\r\nconst LoginApp = ({ login, isAuthenticated }) => {\r\n  const [formData, setformData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const { email, password } = formData;\r\n\r\n  const handleChange = (e) =>\r\n    setformData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // send state to redux\r\n    const log = await login(email, password);\r\n\r\n    if (log.status === 200) {\r\n      const message = `Login Success`;\r\n\r\n      toast.success(message, {\r\n        hideProgressBar: true,\r\n        autoClose: 4000,\r\n      });\r\n    } else {\r\n      const message = `${log.status} ${log.statusText}, ${log.data.detail}`;\r\n\r\n      toast.error(message, {\r\n        hideProgressBar: true,\r\n        autoClose: 4000,\r\n      });\r\n    }\r\n  };\r\n\r\n  // user IsAuthenticated\r\n  // Redirect to homepage\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {/* <Cube time={2000} /> */}\r\n      <div className=\"d-flex align-items-center min-vh-100 py-3\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg={5}>\r\n              <Card>\r\n                <Card.Body className=\"p-4\">\r\n                  <div className=\"text-center w-75 m-auto\">\r\n                    <h3 className=\"text-dark mb-3\">Login</h3>\r\n                    <p className=\"text-muted mb-4\">\r\n                      Enter your credentials to access admin panel\r\n                    </p>\r\n                  </div>\r\n                  <Form onSubmit={(e) => handleSubmit(e)}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label htmlFor=\"#email\">Email Address</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        value={email || \"\"}\r\n                        onChange={(e) => handleChange(e)}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Link\r\n                        to=\"/reset-password\"\r\n                        className=\"text-muted float-end \"\r\n                      >\r\n                        <small>Forgot your password?</small>\r\n                      </Link>\r\n                      <Form.Label htmlFor=\"#password\">Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        value={password || \"\"}\r\n                        onChange={(e) => handleChange(e)}\r\n                        minLength=\"8\"\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mt-3 mb-3 text-center\">\r\n                      <Button type=\"submit\" variant=\"primary\" value=\"Login\">\r\n                        Login\r\n                      </Button>\r\n                    </Form.Group>\r\n                  </Form>\r\n                  <div className=\"text-center mt-5\">\r\n                    <p className=\"text-muted\">\r\n                      Not registered?{\" \"}\r\n                      <Link to=\"/signup\">Create an account</Link>\r\n                    </p>\r\n                  </div>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// Get Data from redux store\r\nconst mapStateToProps = (state) => ({\r\n  // Check Authentictaion\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\n// Connect react component with redux store\r\nexport const LoginPage = connect(mapStateToProps, { login })(LoginApp);\r\n","import React, { useState } from \"react\";\r\n\r\n// redux connect with react\r\nimport { connect } from \"react-redux\";\r\n\r\n// Bootstrap\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Redux action\r\nimport { reset_password } from \"../../store/actions/auth\";\r\n\r\nconst ResetPasswordApp = ({ reset_password }) => {\r\n  const [formData, setformData] = useState({\r\n    email: \"\",\r\n  });\r\n\r\n  const { email } = formData;\r\n\r\n  const handleChange = (e) =>\r\n    setformData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const res = await reset_password(email);\r\n    if (res) {\r\n      toast.dark(\"Check your email inbox for reset link\", {\r\n        autoClose: 4000,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center min-vh-100 py-3\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg={5}>\r\n              <Card>\r\n                <Card.Body className=\"p-4\">\r\n                  <div className=\"text-center w-75 m-auto\">\r\n                    <h3 className=\"text-dark mb-3\">Password reset link</h3>\r\n                  </div>\r\n                  <Form onSubmit={(e) => handleSubmit(e)}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label htmlFor=\"#email\">Email Address</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        value={email || \"\"}\r\n                        onChange={(e) => handleChange(e)}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mt-3 mb-3 text-center\">\r\n                      <Button type=\"submit\" variant=\"primary\">\r\n                        Send Link\r\n                      </Button>\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n\r\n// Connect react component with redux store\r\nexport const Resetpassword = connect(null, { reset_password })(\r\n  ResetPasswordApp\r\n);\r\n","import React, { useState } from \"react\";\r\n\r\n// Router\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// redux connect with react\r\nimport { connect } from \"react-redux\";\r\n\r\n// Bootstrap\r\nimport { Container, Row, Col, Card, Form, Button } from \"react-bootstrap\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Redux action\r\nimport { reset_password_confirm } from \"../../store/actions/auth\";\r\n\r\nconst ResetPasswordConfrimApp = ({ match, reset_password_confirm }) => {\r\n  const [formData, setformData] = useState({\r\n    new_password: \"\",\r\n    re_new_password: \"\",\r\n  });\r\n  const [requestSent, setRequestSent] = useState(false);\r\n  const { new_password, re_new_password } = formData;\r\n\r\n  const handleChange = (e) =>\r\n    setformData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const uid = match.params.uid;\r\n    const token = match.params.token;\r\n\r\n    if (new_password === re_new_password) {\r\n      const res = await reset_password_confirm(\r\n        uid,\r\n        token,\r\n        new_password,\r\n        re_new_password\r\n      );\r\n\r\n      if (res) {\r\n        toast.dark(\"Password has been reset successfully\", {\r\n          autoClose: 4000,\r\n        });\r\n        setRequestSent(true);\r\n      } else {\r\n        toast.dark(\"Password reset link can used only one time.\", {\r\n          autoClose: 4000,\r\n        });\r\n      }\r\n    } else {\r\n      toast.error(\"Password don't match\", { autoClose: 4000 });\r\n    }\r\n  };\r\n\r\n  if (requestSent) {\r\n    return <Redirect to=\"/login\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center min-vh-100 py-3\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg={5}>\r\n              <Card>\r\n                <Card.Body className=\"p-4\">\r\n                  <div className=\"text-center w-75 m-auto\">\r\n                    <h3 className=\"text-dark mb-3\">Reset your password</h3>\r\n                  </div>\r\n                  <Form onSubmit={(e) => handleSubmit(e)}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label htmlFor=\"#password\">New Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        name=\"new_password\"\r\n                        id=\"new_password\"\r\n                        placeholder=\"Enter new password\"\r\n                        value={new_password || \"\"}\r\n                        onChange={(e) => handleChange(e)}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label htmlFor=\"#re_password\">\r\n                        Re-Enter New password\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        name=\"re_new_password\"\r\n                        id=\"re_new_password\"\r\n                        placeholder=\"Re-Enter new password\"\r\n                        value={re_new_password || \"\"}\r\n                        onChange={(e) => handleChange(e)}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mt-3 mb-3 text-center\">\r\n                      <Button type=\"submit\" variant=\"primary\">\r\n                        Reset Password\r\n                      </Button>\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// Connect react component with redux store\r\nexport const ResetPasswordConfrim = connect(null, { reset_password_confirm })(\r\n  ResetPasswordConfrimApp\r\n);\r\n","import React, { useState } from \"react\";\r\n\r\n// Router\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\n// redux connect with react\r\nimport { connect } from \"react-redux\";\r\n\r\n// Bootstrap\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Form,\r\n  Button,\r\n  Spinner,\r\n} from \"react-bootstrap\";\r\n\r\nimport { toast } from \"react-toastify\";\r\n\r\n// Redux action\r\nimport { signup } from \"../../store/actions/auth\";\r\n\r\nconst SignupApp = ({ signup, isAuthenticated }) => {\r\n  const [formData, setformData] = useState({\r\n    email: \"\",\r\n    name: \"\",\r\n    password: \"\",\r\n    re_password: \"\",\r\n  });\r\n  const [requestSent, setRequestSent] = useState(false);\r\n\r\n  const [emailError, setEmailError] = useState(\"\");\r\n\r\n  const [passwordError, setPasswordError] = useState(\"\");\r\n\r\n  const { email, name, password, re_password } = formData;\r\n\r\n  const handleChange = (e) =>\r\n    setformData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (password === re_password) {\r\n      setRequestSent(true);\r\n      // send state to redux\r\n      const log = await signup(email, name, password, re_password);\r\n\r\n      if (log.status === 201) {\r\n        const message =\r\n          \"Activation link sent to email. You can login to your after activation\";\r\n\r\n        setEmailError(\"\");\r\n        setPasswordError(\"\");\r\n        setRequestSent(false);\r\n        toast.success(message, {\r\n          hideProgressBar: true,\r\n          autoClose: 5000,\r\n        });\r\n      } else {\r\n        setRequestSent(false);\r\n        const response_data = log.data;\r\n\r\n        for (let data in response_data) {\r\n          setEmailError(data === \"email\" ? response_data[data][0] : null);\r\n          setPasswordError(data === \"password\" ? response_data[data] : null);\r\n        }\r\n      }\r\n    } else {\r\n      toast.error(\"Password doesn't match, Try another password\");\r\n    }\r\n  };\r\n\r\n  // user IsAuthenticated\r\n  // Redirect to homepage\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex align-items-center min-vh-100 py-3\">\r\n        <Container>\r\n          <Row className=\"justify-content-center\">\r\n            <Col lg={5}>\r\n              <Card>\r\n                <Card.Body className=\"p-4\">\r\n                  <div className=\"text-center w-75 m-auto\">\r\n                    <h3 className=\"text-dark mb-3\">Login</h3>\r\n                    <p className=\"text-muted mb-4\">\r\n                      Enter your credentials to access admin panel\r\n                    </p>\r\n                  </div>\r\n                  <Form onSubmit={(e) => handleSubmit(e)}>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label htmlFor=\"#email\">Email Address</Form.Label>\r\n                      <Form.Control\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        placeholder=\"Email Address\"\r\n                        value={email || \"\"}\r\n                        onChange={(e) => handleChange(e)}\r\n                        required\r\n                        isInvalid={!!emailError}\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {emailError ? emailError : \"\"}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label htmlFor=\"#name\">Username</Form.Label>\r\n                      <Form.Control\r\n                        type=\"text\"\r\n                        name=\"name\"\r\n                        id=\"name\"\r\n                        placeholder=\"Username\"\r\n                        value={name || \"\"}\r\n                        onChange={(e) => handleChange(e)}\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label htmlFor=\"#password\">Password</Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        id=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        value={password || \"\"}\r\n                        onChange={(e) => handleChange(e)}\r\n                        minLength=\"8\"\r\n                        isInvalid={!!passwordError}\r\n                        required\r\n                      />\r\n                      <Form.Control.Feedback type=\"invalid\">\r\n                        {passwordError ? passwordError : \"\"}\r\n                      </Form.Control.Feedback>\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mb-3\">\r\n                      <Form.Label htmlFor=\"#re_password\">\r\n                        Re-enter Password\r\n                      </Form.Label>\r\n                      <Form.Control\r\n                        type=\"password\"\r\n                        name=\"re_password\"\r\n                        id=\"re_password\"\r\n                        placeholder=\"Re-Enter Password\"\r\n                        value={re_password || \"\"}\r\n                        onChange={(e) => handleChange(e)}\r\n                        minLength=\"8\"\r\n                        required\r\n                      />\r\n                    </Form.Group>\r\n                    <Form.Group className=\"mt-3 mb-3 text-center\">\r\n                      {!requestSent ? (\r\n                        <Button type=\"submit\" variant=\"primary\" value=\"Login\">\r\n                          Register\r\n                        </Button>\r\n                      ) : (\r\n                        <Button variant=\"primary\" disabled>\r\n                          <Spinner\r\n                            as=\"span\"\r\n                            animation=\"border\"\r\n                            size=\"sm\"\r\n                            role=\"status\"\r\n                            aria-hidden=\"true\"\r\n                          />\r\n                          {\"  \"}\r\n                          Send Request...\r\n                        </Button>\r\n                      )}\r\n                    </Form.Group>\r\n                  </Form>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\n// Get Data from redux store\r\nconst mapStateToProps = (state) => ({\r\n  // Check Authentictaion\r\n  isAuthenticated: state.auth.isAuthenticated,\r\n});\r\n\r\n// Connect react component with redux store\r\nexport const Signup = connect(mapStateToProps, { signup })(SignupApp);\r\n","import React from \"react\";\n\nimport { Switch, Route } from \"react-router-dom\";\n\n// URL Routes for pages\nimport { Routes } from \"./utils/Routes\";\n\n// layout\nimport { Layout } from \"./hocs/Layout\";\n\n// Component\nimport { Header } from \"./components/Navbar/Navbar\";\nimport { Loader } from \"./components/Loader/Loader\";\n\n// Pages\nimport { Activation } from \"./pages/Activation/Activation\";\nimport { Dashboard } from \"./pages/Dashboard/Dashboard\";\nimport { Homepage } from \"./pages/Homepage/Homepage\";\nimport { LoginPage } from \"./pages/Loginpage/Loginpage\";\nimport { Resetpassword } from \"./pages/Resetpassword/Resetpassword\";\nimport { ResetPasswordConfrim } from \"./pages/Resetpasswordconfrim/ResetPasswordConfrim\";\nimport { Signup } from \"./pages/Signup/Signup\";\n\n\nexport const App = () => {\n  const RouteWithSidebar = ({ component: Component, ...rest }) => {\n    const [loaded, setLoaded] = React.useState(false);\n    React.useEffect(() => {\n      const timer = setTimeout(() => setLoaded(true), 4000);\n      return () => clearTimeout(timer);\n    }, []);\n    return (\n      <Route\n        {...rest}\n        render={(props) => (\n          <>\n            <Layout>\n              {!loaded ? (\n                <Loader />\n              ) : (\n                <>\n                  <Header />\n                  <Component {...props} />\n                </>\n              )}\n            </Layout>\n          </>\n        )}\n      />\n    );\n  };\n\n  const RouteFullPage = ({ component: Component, ...rest }) => {\n    const [loaded, setLoaded] = React.useState(false);\n    React.useEffect(() => {\n      const timer = setTimeout(() => setLoaded(true), 4000);\n      return () => clearTimeout(timer);\n    }, []);\n    console.log(loaded);\n    return (\n      <Route\n        {...rest}\n        render={(props) => (\n          <>\n            <Layout>\n              {!loaded ? (\n                <Loader />\n              ) : (\n                <>\n                  <Component {...props} />\n                </>\n              )}\n            </Layout>\n          </>\n        )}\n      />\n    );\n  };\n\n  return (\n    <>\n      <Switch>\n        <RouteWithSidebar\n          component={Homepage}\n          path={Routes.Dashboard.path}\n          exact\n        />\n        <RouteFullPage\n          component={LoginPage}\n          path={Routes.Loginpage.path}\n          exact\n        />\n        <RouteFullPage component={Signup} path={Routes.signup.path} exact />\n        <RouteFullPage\n          component={Activation}\n          path={Routes.activation.path}\n          exact\n        />\n        <RouteFullPage\n          component={Resetpassword}\n          path={Routes.resetpassword.path}\n          exact\n        />\n        <RouteFullPage\n          component={ResetPasswordConfrim}\n          path={Routes.resetpasswordconfrim.path}\n          exact\n        />\n        <RouteWithSidebar component={Dashboard} path={Routes.Home.path} exact />\n      </Switch>\n    </>\n  );\n};\n","import {\r\n  ACTIVATION_SUCCESS,\r\n  ACTIVATION_FAILED,\r\n  AUTHENTICATED_SUCCESS,\r\n  AUTHENTICATED_FAILED,\r\n  LOAD_USER_SUCCESS,\r\n  LOAD_USER_FAILED,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAILED,\r\n  LOGOUT,\r\n  PASSWORD_RESET_SUCCESS,\r\n  PASSWORD_RESET_FAILED,\r\n  PASSWORD_RESET_CONFIRM_SUCCESS,\r\n  PASSWORD_RESET_CONFIRM_FAILED,\r\n  SIGNUP_SUCCESS,\r\n  SIGNUP_FAILED,\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  access: localStorage.getItem(\"access\"),\r\n  refresh: localStorage.getItem(\"refresh\"),\r\n  isAuthenticated: null,\r\n  user: null,\r\n  loading: true,\r\n};\r\n\r\nexport const auth = (state = initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n    case LOGIN_SUCCESS:\r\n      localStorage.setItem(\"access\", payload.access);\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        access: payload.access,\r\n        refresh: payload.refresh,\r\n        loading: false,\r\n      };\r\n    case LOAD_USER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        user: payload,\r\n        loading: false,\r\n      };\r\n\r\n    case SIGNUP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    case AUTHENTICATED_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        loading: false,\r\n      };\r\n    case AUTHENTICATED_FAILED:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: false,\r\n        loading: false,\r\n      };\r\n    case SIGNUP_FAILED:\r\n    case LOGIN_FAILED:\r\n    case LOGOUT:\r\n      localStorage.removeItem(\"access\");\r\n      localStorage.removeItem(\"refresh\");\r\n      return {\r\n        ...state,\r\n        access: null,\r\n        refresh: null,\r\n        isAuthenticated: false,\r\n        user: null,\r\n        loading: false,\r\n      };\r\n    case LOAD_USER_FAILED:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        loading: false,\r\n      };\r\n    case PASSWORD_RESET_SUCCESS:\r\n    case PASSWORD_RESET_FAILED:\r\n    case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n    case PASSWORD_RESET_CONFIRM_FAILED:\r\n    case ACTIVATION_SUCCESS:\r\n    case ACTIVATION_FAILED:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { auth } from \"./auth\";\r\n\r\nexport default combineReducers({\r\n  auth,\r\n});\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducers from \"./reducers/\";\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nexport const store = createStore(\r\n  rootReducers,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\n// App\nimport { App } from \"./App\";\n\n// React Router\nimport { BrowserRouter } from \"react-router-dom\";\n\n// Redux Store\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store/store\";\n\n// Main CSS\nimport \"./styles/app.css\";\n\nconst Root = document.getElementById(\"root\");\n\nconst AppSource = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(AppSource, Root);\n"],"sourceRoot":""}